;
; Copyright (c) 2024 WIZnet Co.,Ltd
;
; SPDX-License-Identifier: BSD-3-Clause
;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; single
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
.program wizchip_pio_spi_single_write_read
.side_set 1

public write_bits: 
    out pins, 1             side 0
    jmp x-- write_bits      side 1
    set pins 0              side 0
public write_bits_end:
read_byte_delay:
    set pindirs 0           side 0
read_byte:
    set x 6                 side 1
read_bits:
    in pins, 1              side 0 
    jmp x-- read_bits       side 1
    in pins, 1              side 0 
    jmp y-- read_byte       side 0
public read_bits_end:



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; dual
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
.program wizchip_pio_spi_dual_write_read
.side_set 1

public write_bits: 
    out pins, 2             side 0
    jmp x-- write_bits      side 1
    set pins 0              side 0
public write_bits_end:
read_byte_delay:
    set pindirs 0           side 0
read_byte:
    set x 2                 side 1
read_bits:
    in pins, 2              side 0 
    jmp x-- read_bits       side 1
    in pins, 2              side 0 
    jmp y-- read_byte       side 0
public read_bits_end:

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; quad
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
.program wizchip_pio_spi_quad_write_read
.side_set 1

write_bits: 
    out pins, 4             side 0
    jmp x-- write_bits      side 1
    set pins 0              side 0
public write_bits_end:
read_byte_delay:
    set pindirs 0           side 0
read_byte:
    set x 0                 side 1
read_bits:
    in pins, 4              side 0 
    jmp x-- read_bits       side 1
    in pins, 4              side 0 
    jmp y-- read_byte       side 0
public read_bits_end:

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; octal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
.program wizchip_pio_spi_octal_write_read
.side_set 1

write_bits: 
    out pins, 8             side 0
    jmp x-- write_bits      side 1
public write_bits_end:
    set pindirs, 0          side 0
read_bits:
    in pins, 8              side 1
    jmp y-- read_bits       side 0
public read_bits_end:
